{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S P E C T R E\\\\Downloads\\\\moodify\\\\moodify\\\\moodify\\\\src\\\\pages\\\\selectmood.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Layout from '../components/layout';\nimport '../styling/selectmood.css'; // Import the new CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectMood = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedMood, setSelectedMood] = useState(null);\n  const moods = [{\n    id: 1,\n    emoji: 'ðŸ˜Š',\n    name: 'Happy',\n    color: '#F9D71C'\n  }, {\n    id: 2,\n    emoji: 'ðŸ˜¢',\n    name: 'Sad',\n    color: '#5D8BF4'\n  }, {\n    id: 3,\n    emoji: 'ðŸ˜¡',\n    name: 'Angry',\n    color: '#FF6B6B'\n  }, {\n    id: 4,\n    emoji: 'ðŸ˜Œ',\n    name: 'Calm',\n    color: '#6BCB77'\n  }, {\n    id: 5,\n    emoji: 'ðŸ˜´',\n    name: 'Tired',\n    color: '#A685E2'\n  }, {\n    id: 6,\n    emoji: 'ðŸ¤ª',\n    name: 'Energetic',\n    color: '#FF9F45'\n  }];\n  const handleMoodSelect = mood => {\n    setSelectedMood(mood);\n    localStorage.setItem('selectedMood', JSON.stringify(mood));\n    setTimeout(() => navigate('/recommendations'), 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"How are you feeling today?\",\n    subtitle: \"Select your current mood\",\n    showNav: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"moods-container\",\n      children: moods.map(mood => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `mood-button ${(selectedMood === null || selectedMood === void 0 ? void 0 : selectedMood.id) === mood.id ? 'selected' : ''}`,\n        style: {\n          backgroundColor: (selectedMood === null || selectedMood === void 0 ? void 0 : selectedMood.id) === mood.id ? mood.color : '',\n          boxShadow: (selectedMood === null || selectedMood === void 0 ? void 0 : selectedMood.id) === mood.id ? `0 0 24px ${mood.color}80` : ''\n        },\n        onClick: () => handleMoodSelect(mood),\n        disabled: selectedMood !== null,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mood-emoji\",\n          children: mood.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mood-name\",\n          children: mood.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, mood.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), selectedMood && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-feedback\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"selected-text\",\n        children: [\"Selected: \", selectedMood.emoji, \" \", selectedMood.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"redirect-text\",\n        children: \"Loading recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectMood, \"tPG+0TWOXo77YQUiwJlt2sAEJK8=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectMood;\nexport default SelectMood;\nvar _c;\n$RefreshReg$(_c, \"SelectMood\");","map":{"version":3,"names":["React","useState","useNavigate","Layout","jsxDEV","_jsxDEV","SelectMood","_s","navigate","selectedMood","setSelectedMood","moods","id","emoji","name","color","handleMoodSelect","mood","localStorage","setItem","JSON","stringify","setTimeout","title","subtitle","showNav","children","className","map","style","backgroundColor","boxShadow","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/S P E C T R E/Downloads/moodify/moodify/moodify/src/pages/selectmood.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Layout from '../components/layout';\r\nimport '../styling/selectmood.css'; // Import the new CSS file\r\n\r\nconst SelectMood = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedMood, setSelectedMood] = useState(null);\r\n  \r\n  const moods = [\r\n    { id: 1, emoji: 'ðŸ˜Š', name: 'Happy', color: '#F9D71C' },\r\n    { id: 2, emoji: 'ðŸ˜¢', name: 'Sad', color: '#5D8BF4' },\r\n    { id: 3, emoji: 'ðŸ˜¡', name: 'Angry', color: '#FF6B6B' },\r\n    { id: 4, emoji: 'ðŸ˜Œ', name: 'Calm', color: '#6BCB77' },\r\n    { id: 5, emoji: 'ðŸ˜´', name: 'Tired', color: '#A685E2' },\r\n    { id: 6, emoji: 'ðŸ¤ª', name: 'Energetic', color: '#FF9F45' }\r\n  ];\r\n  \r\n  const handleMoodSelect = (mood) => {\r\n    setSelectedMood(mood);\r\n    localStorage.setItem('selectedMood', JSON.stringify(mood));\r\n    setTimeout(() => navigate('/recommendations'), 1000);\r\n  };\r\n  \r\n  return (\r\n    <Layout\r\n      title=\"How are you feeling today?\"\r\n      subtitle=\"Select your current mood\"\r\n      showNav={true}\r\n    >\r\n      <div className=\"moods-container\">\r\n        {moods.map(mood => (\r\n          <button\r\n            key={mood.id}\r\n            className={`mood-button ${selectedMood?.id === mood.id ? 'selected' : ''}`}\r\n            style={{\r\n              backgroundColor: selectedMood?.id === mood.id ? mood.color : '',\r\n              boxShadow: selectedMood?.id === mood.id ? `0 0 24px ${mood.color}80` : ''\r\n            }}\r\n            onClick={() => handleMoodSelect(mood)}\r\n            disabled={selectedMood !== null}\r\n          >\r\n            <span className=\"mood-emoji\">{mood.emoji}</span>\r\n            <span className=\"mood-name\">{mood.name}</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n      \r\n      {selectedMood && (\r\n        <div className=\"selected-feedback\">\r\n          <p className=\"selected-text\">Selected: {selectedMood.emoji} {selectedMood.name}</p>\r\n          <p className=\"redirect-text\">Loading recommendations...</p>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default SelectMood;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}