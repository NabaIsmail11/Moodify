{"ast":null,"code":"const API_BASE = process.env.REACT_APP_PROXY_URL || 'http://localhost:3001/api/spotify';\nconst formatDuration = ms => {\n  const seconds = Math.floor(ms / 1000);\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\n};\nexport const getRecommendationsByMood = async mood => {\n  try {\n    const response = await fetch(`${API_BASE}/recommendations?mood=${mood}`);\n    if (!response.ok) throw new Error('Network response was not ok');\n    const tracks = await response.json();\n    return tracks.map(track => ({\n      ...track,\n      duration: formatDuration(track.duration)\n    }));\n  } catch (error) {\n    console.error('Error fetching recommendations:', error);\n    return [];\n  }\n};\nexport const getTopTracks = async () => {\n  try {\n    const response = await fetch(`${API_BASE}/top-tracks`);\n    if (!response.ok) throw new Error('Network response was not ok');\n    const tracks = await response.json();\n    return tracks.map(track => ({\n      ...track,\n      duration: formatDuration(track.duration)\n    }));\n  } catch (error) {\n    console.error('Error fetching top tracks:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_PROXY_URL","formatDuration","ms","seconds","Math","floor","mins","secs","toString","padStart","getRecommendationsByMood","mood","response","fetch","ok","Error","tracks","json","map","track","duration","error","console","getTopTracks"],"sources":["C:/Users/nabai/Desktop/moodify/moodify/src/services/spotifyapi.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_PROXY_URL || 'http://localhost:3001/api/spotify';\r\n\r\nconst formatDuration = (ms) => {\r\n  const seconds = Math.floor(ms / 1000);\r\n  const mins = Math.floor(seconds / 60);\r\n  const secs = seconds % 60;\r\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n};\r\n\r\nexport const getRecommendationsByMood = async (mood) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE}/recommendations?mood=${mood}`);\r\n    if (!response.ok) throw new Error('Network response was not ok');\r\n    \r\n    const tracks = await response.json();\r\n    return tracks.map(track => ({\r\n      ...track,\r\n      duration: formatDuration(track.duration)\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching recommendations:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getTopTracks = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE}/top-tracks`);\r\n    if (!response.ok) throw new Error('Network response was not ok');\r\n    \r\n    const tracks = await response.json();\r\n    return tracks.map(track => ({\r\n      ...track,\r\n      duration: formatDuration(track.duration)\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching top tracks:', error);\r\n    return [];\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,IAAI,mCAAmC;AAEvF,MAAMC,cAAc,GAAIC,EAAE,IAAK;EAC7B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,EAAE,GAAG,IAAI,CAAC;EACrC,MAAMI,IAAI,GAAGF,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;EACrC,MAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;EACzB,OAAO,GAAGG,IAAI,IAAIC,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;AACtD,CAAC;AAED,OAAO,MAAMC,wBAAwB,GAAG,MAAOC,IAAI,IAAK;EACtD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhB,QAAQ,yBAAyBc,IAAI,EAAE,CAAC;IACxE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAEhE,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM,CAACE,GAAG,CAACC,KAAK,KAAK;MAC1B,GAAGA,KAAK;MACRC,QAAQ,EAAEnB,cAAc,CAACkB,KAAK,CAACC,QAAQ;IACzC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGhB,QAAQ,aAAa,CAAC;IACtD,IAAI,CAACe,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAEhE,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM,CAACE,GAAG,CAACC,KAAK,KAAK;MAC1B,GAAGA,KAAK;MACRC,QAAQ,EAAEnB,cAAc,CAACkB,KAAK,CAACC,QAAQ;IACzC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}