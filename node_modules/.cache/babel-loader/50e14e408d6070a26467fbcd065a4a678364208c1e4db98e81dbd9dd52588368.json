{"ast":null,"code":"const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\nconst clientSecret = process.env.REACT_APP_SPOTIFY_CLIENT_SECRET;\nlet accessToken = null;\n\n// Function to get Spotify access token\nexport const getAccessToken = async () => {\n  if (accessToken) return accessToken;\n  const response = await fetch('https://accounts.spotify.com/api/token', {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Basic ' + btoa(`${clientId}:${clientSecret}`),\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: new URLSearchParams({\n      grant_type: 'client_credentials'\n    })\n  });\n  if (!response.ok) {\n    console.error('Spotify Auth Error:', await response.json());\n    throw new Error('Failed to get access token');\n  }\n  const data = await response.json();\n  accessToken = data.access_token;\n  return accessToken;\n};\n\n// Function to fetch top songs from a Spotify playlist\nexport const getTopSongs = async () => {\n  try {\n    const token = await getAccessToken();\n    const playlistId = '37i9dQZEVXbMDoHDwVN2tF'; // Spotify Global Top 50\n\n    const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?limit=10`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.ok) throw new Error('Failed to fetch playlist');\n    const {\n      items\n    } = await response.json();\n    return items.map(({\n      track\n    }, index) => {\n      var _track$album$images$;\n      return {\n        id: track.id,\n        rank: index + 1,\n        title: track.name,\n        artist: track.artists.map(a => a.name).join(', '),\n        duration: Math.floor(track.duration_ms / 1000),\n        cover: ((_track$album$images$ = track.album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url) || 'https://via.placeholder.com/60',\n        preview: track.preview_url\n      };\n    });\n  } catch (error) {\n    console.error('Error fetching songs:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["clientId","process","env","REACT_APP_SPOTIFY_CLIENT_ID","clientSecret","REACT_APP_SPOTIFY_CLIENT_SECRET","accessToken","getAccessToken","response","fetch","method","headers","btoa","body","URLSearchParams","grant_type","ok","console","error","json","Error","data","access_token","getTopSongs","token","playlistId","Authorization","items","map","track","index","_track$album$images$","id","rank","title","name","artist","artists","a","join","duration","Math","floor","duration_ms","cover","album","images","url","preview","preview_url"],"sources":["C:/Users/nabai/Desktop/moodify/moodify/src/services/spotifyapi.js"],"sourcesContent":["const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\r\nconst clientSecret = process.env.REACT_APP_SPOTIFY_CLIENT_SECRET;\r\n\r\nlet accessToken = null;\r\n\r\n// Function to get Spotify access token\r\nexport const getAccessToken = async () => {\r\n  if (accessToken) return accessToken;\r\n\r\n  const response = await fetch('https://accounts.spotify.com/api/token', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': 'Basic ' + btoa(`${clientId}:${clientSecret}`),\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    body: new URLSearchParams({ grant_type: 'client_credentials' })\r\n  });\r\n\r\n  if (!response.ok) {\r\n    console.error('Spotify Auth Error:', await response.json());\r\n    throw new Error('Failed to get access token');\r\n  }\r\n\r\n  const data = await response.json();\r\n  accessToken = data.access_token;\r\n  return accessToken;\r\n};\r\n\r\n// Function to fetch top songs from a Spotify playlist\r\nexport const getTopSongs = async () => {\r\n  try {\r\n    const token = await getAccessToken();\r\n    const playlistId = '37i9dQZEVXbMDoHDwVN2tF'; // Spotify Global Top 50\r\n\r\n    const response = await fetch(`https://api.spotify.com/v1/playlists/${playlistId}/tracks?limit=10`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n\r\n    if (!response.ok) throw new Error('Failed to fetch playlist');\r\n\r\n    const { items } = await response.json();\r\n\r\n    return items.map(({ track }, index) => ({\r\n      id: track.id,\r\n      rank: index + 1,\r\n      title: track.name,\r\n      artist: track.artists.map(a => a.name).join(', '),\r\n      duration: Math.floor(track.duration_ms / 1000),\r\n      cover: track.album.images[0]?.url || 'https://via.placeholder.com/60',\r\n      preview: track.preview_url\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching songs:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B;AACxD,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACG,+BAA+B;AAEhE,IAAIC,WAAW,GAAG,IAAI;;AAEtB;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAID,WAAW,EAAE,OAAOA,WAAW;EAEnC,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;IACrEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,eAAe,EAAE,QAAQ,GAAGC,IAAI,CAAC,GAAGZ,QAAQ,IAAII,YAAY,EAAE,CAAC;MAC/D,cAAc,EAAE;IAClB,CAAC;IACDS,IAAI,EAAE,IAAIC,eAAe,CAAC;MAAEC,UAAU,EAAE;IAAqB,CAAC;EAChE,CAAC,CAAC;EAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;IAChBC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAE,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC;IAC3D,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/C;EAEA,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACW,IAAI,CAAC,CAAC;EAClCb,WAAW,GAAGe,IAAI,CAACC,YAAY;EAC/B,OAAOhB,WAAW;AACpB,CAAC;;AAED;AACA,OAAO,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,KAAK,GAAG,MAAMjB,cAAc,CAAC,CAAC;IACpC,MAAMkB,UAAU,GAAG,wBAAwB,CAAC,CAAC;;IAE7C,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwCgB,UAAU,kBAAkB,EAAE;MACjGd,OAAO,EAAE;QAAEe,aAAa,EAAE,UAAUF,KAAK;MAAG;IAC9C,CAAC,CAAC;IAEF,IAAI,CAAChB,QAAQ,CAACQ,EAAE,EAAE,MAAM,IAAII,KAAK,CAAC,0BAA0B,CAAC;IAE7D,MAAM;MAAEO;IAAM,CAAC,GAAG,MAAMnB,QAAQ,CAACW,IAAI,CAAC,CAAC;IAEvC,OAAOQ,KAAK,CAACC,GAAG,CAAC,CAAC;MAAEC;IAAM,CAAC,EAAEC,KAAK;MAAA,IAAAC,oBAAA;MAAA,OAAM;QACtCC,EAAE,EAAEH,KAAK,CAACG,EAAE;QACZC,IAAI,EAAEH,KAAK,GAAG,CAAC;QACfI,KAAK,EAAEL,KAAK,CAACM,IAAI;QACjBC,MAAM,EAAEP,KAAK,CAACQ,OAAO,CAACT,GAAG,CAACU,CAAC,IAAIA,CAAC,CAACH,IAAI,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC;QACjDC,QAAQ,EAAEC,IAAI,CAACC,KAAK,CAACb,KAAK,CAACc,WAAW,GAAG,IAAI,CAAC;QAC9CC,KAAK,EAAE,EAAAb,oBAAA,GAAAF,KAAK,CAACgB,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,cAAAf,oBAAA,uBAArBA,oBAAA,CAAuBgB,GAAG,KAAI,gCAAgC;QACrEC,OAAO,EAAEnB,KAAK,CAACoB;MACjB,CAAC;IAAA,CAAC,CAAC;EACL,CAAC,CAAC,OAAO/B,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}