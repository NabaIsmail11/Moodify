{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nabai\\\\Desktop\\\\moodify\\\\moodify\\\\src\\\\pages\\\\topsongs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTopSongs } from '../services/spotifyapi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDuration = seconds => {\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\n};\nconst TopSongs = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const data = await getTopSongs();\n        setSongs(data);\n      } catch (error) {\n        console.error('Error fetching songs:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSongs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-green-500 text-xl text-center mb-4\",\n      children: \"Spotify Top Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin h-8 w-8 border-4 border-green-500 border-t-transparent rounded-full mx-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading songs...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-5 gap-4 text-gray-300 font-semibold\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"border-gray-700\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-5 gap-4 items-center p-3 bg-gray-800 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-green-400 font-bold\",\n          children: song.rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.cover,\n          alt: \"Cover\",\n          className: \"w-12 h-12 rounded-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"truncate\",\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-400\",\n          children: song.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-300\",\n          children: formatDuration(song.duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TopSongs, \"amDYWAv3QVK/1a+lJO2k+xiMa04=\");\n_c = TopSongs;\nexport default TopSongs;\nvar _c;\n$RefreshReg$(_c, \"TopSongs\");","map":{"version":3,"names":["React","useEffect","useState","getTopSongs","jsxDEV","_jsxDEV","formatDuration","seconds","mins","Math","floor","secs","toString","padStart","TopSongs","_s","songs","setSongs","loading","setLoading","fetchSongs","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","rank","src","cover","alt","title","artist","duration","id","_c","$RefreshReg$"],"sources":["C:/Users/nabai/Desktop/moodify/moodify/src/pages/topsongs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getTopSongs } from '../services/spotifyapi';\r\n\r\nconst formatDuration = (seconds) => {\r\n  const mins = Math.floor(seconds / 60);\r\n  const secs = seconds % 60;\r\n  return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n};\r\n\r\nconst TopSongs = () => {\r\n  const [songs, setSongs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchSongs = async () => {\r\n      try {\r\n        const data = await getTopSongs();\r\n        setSongs(data);\r\n      } catch (error) {\r\n        console.error('Error fetching songs:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSongs();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-4\">\r\n      <h2 className=\"text-green-500 text-xl text-center mb-4\">Spotify Top Songs</h2>\r\n\r\n      {loading ? (\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin h-8 w-8 border-4 border-green-500 border-t-transparent rounded-full mx-auto\"></div>\r\n          <p>Loading songs...</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-5 gap-4 text-gray-300 font-semibold\">\r\n            <span>#</span>\r\n            <span>Cover</span>\r\n            <span>Song</span>\r\n            <span>Artist</span>\r\n            <span>Time</span>\r\n          </div>\r\n          <hr className=\"border-gray-700\" />\r\n\r\n          {songs.map(song => (\r\n            <div key={song.id} className=\"grid grid-cols-5 gap-4 items-center p-3 bg-gray-800 rounded-lg\">\r\n              <span className=\"text-green-400 font-bold\">{song.rank}</span>\r\n              <img src={song.cover} alt=\"Cover\" className=\"w-12 h-12 rounded-md\" />\r\n              <span className=\"truncate\">{song.title}</span>\r\n              <span className=\"text-gray-400\">{song.artist}</span>\r\n              <span className=\"text-gray-300\">{formatDuration(song.duration)}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopSongs;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}