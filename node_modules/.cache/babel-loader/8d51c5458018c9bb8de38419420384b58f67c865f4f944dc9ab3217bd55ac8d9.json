{"ast":null,"code":"const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\nconst clientSecret = process.env.REACT_APP_SPOTIFY_CLIENT_SECRET;\nlet accessToken = null;\nexport const getAccessToken = async () => {\n  if (accessToken) return accessToken;\n  const response = await fetch('https://accounts.spotify.com/api/token', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + btoa(`${clientId}:${clientSecret}`)\n    },\n    body: 'grant_type=client_credentials'\n  });\n  const data = await response.json();\n  accessToken = data.access_token;\n  return accessToken;\n};\nexport const getTopSongs = async () => {\n  try {\n    const token = await getAccessToken();\n    const response = await fetch('https://api.spotify.com/v1/playlists/37i9dQZEVXbMDoHDwVN2tF/tracks?limit=50', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return data.items.map((item, index) => {\n      var _item$track$album$ima;\n      return {\n        id: item.track.id,\n        rank: index + 1,\n        title: item.track.name,\n        artist: item.track.artists.map(artist => artist.name).join(', '),\n        duration: Math.floor(item.track.duration_ms / 1000),\n        cover: (_item$track$album$ima = item.track.album.images[0]) === null || _item$track$album$ima === void 0 ? void 0 : _item$track$album$ima.url,\n        preview: item.track.preview_url\n      };\n    });\n  } catch (error) {\n    console.error('Error fetching top songs:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["clientId","process","env","REACT_APP_SPOTIFY_CLIENT_ID","clientSecret","REACT_APP_SPOTIFY_CLIENT_SECRET","accessToken","getAccessToken","response","fetch","method","headers","btoa","body","data","json","access_token","getTopSongs","token","items","map","item","index","_item$track$album$ima","id","track","rank","title","name","artist","artists","join","duration","Math","floor","duration_ms","cover","album","images","url","preview","preview_url","error","console"],"sources":["C:/Users/nabai/Desktop/moodify/moodify/src/services/spotifyapi.js"],"sourcesContent":["const clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\r\nconst clientSecret = process.env.REACT_APP_SPOTIFY_CLIENT_SECRET;\r\n\r\nlet accessToken = null;\r\n\r\nexport const getAccessToken = async () => {\r\n  if (accessToken) return accessToken;\r\n\r\n  const response = await fetch('https://accounts.spotify.com/api/token', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n      'Authorization': 'Basic ' + btoa(`${clientId}:${clientSecret}`)\r\n    },\r\n    body: 'grant_type=client_credentials'\r\n  });\r\n\r\n  const data = await response.json();\r\n  accessToken = data.access_token;\r\n  return accessToken;\r\n};\r\n\r\nexport const getTopSongs = async () => {\r\n  try {\r\n    const token = await getAccessToken();\r\n    const response = await fetch('https://api.spotify.com/v1/playlists/37i9dQZEVXbMDoHDwVN2tF/tracks?limit=50', {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    const data = await response.json();\r\n    return data.items.map((item, index) => ({\r\n      id: item.track.id,\r\n      rank: index + 1,\r\n      title: item.track.name,\r\n      artist: item.track.artists.map(artist => artist.name).join(', '),\r\n      duration: Math.floor(item.track.duration_ms / 1000),\r\n      cover: item.track.album.images[0]?.url,\r\n      preview: item.track.preview_url\r\n    }));\r\n  } catch (error) {\r\n    console.error('Error fetching top songs:', error);\r\n    return [];\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B;AACxD,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACG,+BAA+B;AAEhE,IAAIC,WAAW,GAAG,IAAI;AAEtB,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAID,WAAW,EAAE,OAAOA,WAAW;EAEnC,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;IACrEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,mCAAmC;MACnD,eAAe,EAAE,QAAQ,GAAGC,IAAI,CAAC,GAAGZ,QAAQ,IAAII,YAAY,EAAE;IAChE,CAAC;IACDS,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAClCT,WAAW,GAAGQ,IAAI,CAACE,YAAY;EAC/B,OAAOV,WAAW;AACpB,CAAC;AAED,OAAO,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,KAAK,GAAG,MAAMX,cAAc,CAAC,CAAC;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6EAA6E,EAAE;MAC1GE,OAAO,EAAE;QACP,eAAe,EAAE,UAAUO,KAAK;MAClC;IACF,CAAC,CAAC;IAEF,MAAMJ,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACK,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;MAAA,IAAAC,qBAAA;MAAA,OAAM;QACtCC,EAAE,EAAEH,IAAI,CAACI,KAAK,CAACD,EAAE;QACjBE,IAAI,EAAEJ,KAAK,GAAG,CAAC;QACfK,KAAK,EAAEN,IAAI,CAACI,KAAK,CAACG,IAAI;QACtBC,MAAM,EAAER,IAAI,CAACI,KAAK,CAACK,OAAO,CAACV,GAAG,CAACS,MAAM,IAAIA,MAAM,CAACD,IAAI,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC;QAChEC,QAAQ,EAAEC,IAAI,CAACC,KAAK,CAACb,IAAI,CAACI,KAAK,CAACU,WAAW,GAAG,IAAI,CAAC;QACnDC,KAAK,GAAAb,qBAAA,GAAEF,IAAI,CAACI,KAAK,CAACY,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,cAAAf,qBAAA,uBAA1BA,qBAAA,CAA4BgB,GAAG;QACtCC,OAAO,EAAEnB,IAAI,CAACI,KAAK,CAACgB;MACtB,CAAC;IAAA,CAAC,CAAC;EACL,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}