{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nabai\\\\Desktop\\\\moodify\\\\moodify\\\\src\\\\pages\\\\recommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Layout from '../components/layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentMood, setCurrentMood] = useState(null);\n  const [recommendations, setRecommendations] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const moodRecommendations = {\n    Happy: [{\n      id: 1,\n      title: \"Don't Stop Me Now\",\n      artist: \"Queen\",\n      duration: \"3:29\"\n    }, {\n      id: 2,\n      title: \"Happy\",\n      artist: \"Pharrell Williams\",\n      duration: \"3:53\"\n    }],\n    Sad: [{\n      id: 3,\n      title: \"Someone Like You\",\n      artist: \"Adele\",\n      duration: \"4:45\"\n    }, {\n      id: 4,\n      title: \"Hurt\",\n      artist: \"Johnny Cash\",\n      duration: \"3:38\"\n    }]\n    // Add other moods...\n  };\n  useEffect(() => {\n    const moodData = JSON.parse(localStorage.getItem('selectedMood'));\n    if (moodData) {\n      setCurrentMood(moodData);\n      // Simulate API call\n      setTimeout(() => {\n        setRecommendations(moodRecommendations[moodData.name] || []);\n        setIsLoading(false);\n      }, 1500);\n    } else {\n      navigate('/select-mood');\n    }\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Your Recommendations\",\n    children: [currentMood && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: localStyles.moodHeader,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: currentMood.color,\n          padding: '10px 20px',\n          borderRadius: '20px',\n          display: 'inline-flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '24px',\n            marginRight: '10px'\n          },\n          children: currentMood.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#fff',\n            fontWeight: '600'\n          },\n          children: currentMood.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: localStyles.loading,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: localStyles.spinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Finding perfect songs for you...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: localStyles.recommendations,\n      children: recommendations.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: localStyles.songCard,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: localStyles.songTitle,\n            children: song.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: localStyles.songArtist,\n            children: song.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: localStyles.playButton,\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, song.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"eZLCtCkK/CBIEdeciwj1bVkPFn8=\", false, function () {\n  return [useNavigate];\n});\n_c = Recommendations;\nconst localStyles = {\n  moodHeader: {\n    textAlign: 'center',\n    marginBottom: '30px'\n  },\n  loading: {\n    textAlign: 'center',\n    color: 'rgba(255,255,255,0.7)'\n  },\n  spinner: {\n    border: '4px solid rgba(255,255,255,0.1)',\n    borderTop: '4px solid #8e44ad',\n    borderRadius: '50%',\n    width: '40px',\n    height: '40px',\n    animation: 'spin 1s linear infinite',\n    margin: '20px auto'\n  },\n  recommendations: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px'\n  },\n  songCard: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '15px',\n    backgroundColor: 'rgba(255,255,255,0.1)',\n    borderRadius: '8px'\n  },\n  songTitle: {\n    color: '#fff',\n    margin: '0 0 5px 0'\n  },\n  songArtist: {\n    color: 'rgba(255,255,255,0.7)',\n    margin: 0,\n    fontSize: '14px'\n  },\n  playButton: {\n    padding: '8px 20px',\n    backgroundColor: '#8e44ad',\n    color: 'white',\n    border: 'none',\n    borderRadius: '20px',\n    cursor: 'pointer'\n  }\n};\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Layout","jsxDEV","_jsxDEV","Recommendations","_s","navigate","currentMood","setCurrentMood","recommendations","setRecommendations","isLoading","setIsLoading","moodRecommendations","Happy","id","title","artist","duration","Sad","moodData","JSON","parse","localStorage","getItem","setTimeout","name","children","style","localStyles","moodHeader","backgroundColor","color","padding","borderRadius","display","alignItems","fontSize","marginRight","emoji","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","loading","spinner","map","song","songCard","songTitle","songArtist","playButton","_c","textAlign","marginBottom","border","borderTop","width","height","animation","margin","flexDirection","gap","justifyContent","cursor","$RefreshReg$"],"sources":["C:/Users/nabai/Desktop/moodify/moodify/src/pages/recommendations.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Layout from '../components/layout';\r\n\r\nconst Recommendations = () => {\r\n  const navigate = useNavigate();\r\n  const [currentMood, setCurrentMood] = useState(null);\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const moodRecommendations = {\r\n    Happy: [\r\n      { id: 1, title: \"Don't Stop Me Now\", artist: \"Queen\", duration: \"3:29\" },\r\n      { id: 2, title: \"Happy\", artist: \"Pharrell Williams\", duration: \"3:53\" }\r\n    ],\r\n    Sad: [\r\n      { id: 3, title: \"Someone Like You\", artist: \"Adele\", duration: \"4:45\" },\r\n      { id: 4, title: \"Hurt\", artist: \"Johnny Cash\", duration: \"3:38\" }\r\n    ]\r\n    // Add other moods...\r\n  };\r\n\r\n  useEffect(() => {\r\n    const moodData = JSON.parse(localStorage.getItem('selectedMood'));\r\n    if (moodData) {\r\n      setCurrentMood(moodData);\r\n      // Simulate API call\r\n      setTimeout(() => {\r\n        setRecommendations(moodRecommendations[moodData.name] || []);\r\n        setIsLoading(false);\r\n      }, 1500);\r\n    } else {\r\n      navigate('/select-mood');\r\n    }\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <Layout title=\"Your Recommendations\">\r\n      {currentMood && (\r\n        <div style={localStyles.moodHeader}>\r\n          <div style={{ \r\n            backgroundColor: currentMood.color,\r\n            padding: '10px 20px',\r\n            borderRadius: '20px',\r\n            display: 'inline-flex',\r\n            alignItems: 'center'\r\n          }}>\r\n            <span style={{ fontSize: '24px', marginRight: '10px' }}>\r\n              {currentMood.emoji}\r\n            </span>\r\n            <span style={{ color: '#fff', fontWeight: '600' }}>\r\n              {currentMood.name}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isLoading ? (\r\n        <div style={localStyles.loading}>\r\n          <div style={localStyles.spinner}></div>\r\n          <p>Finding perfect songs for you...</p>\r\n        </div>\r\n      ) : (\r\n        <div style={localStyles.recommendations}>\r\n          {recommendations.map(song => (\r\n            <div key={song.id} style={localStyles.songCard}>\r\n              <div>\r\n                <h3 style={localStyles.songTitle}>{song.title}</h3>\r\n                <p style={localStyles.songArtist}>{song.artist}</p>\r\n              </div>\r\n              <button style={localStyles.playButton}>Play</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst localStyles = {\r\n  moodHeader: {\r\n    textAlign: 'center',\r\n    marginBottom: '30px'\r\n  },\r\n  loading: {\r\n    textAlign: 'center',\r\n    color: 'rgba(255,255,255,0.7)'\r\n  },\r\n  spinner: {\r\n    border: '4px solid rgba(255,255,255,0.1)',\r\n    borderTop: '4px solid #8e44ad',\r\n    borderRadius: '50%',\r\n    width: '40px',\r\n    height: '40px',\r\n    animation: 'spin 1s linear infinite',\r\n    margin: '20px auto'\r\n  },\r\n  recommendations: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '15px'\r\n  },\r\n  songCard: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '15px',\r\n    backgroundColor: 'rgba(255,255,255,0.1)',\r\n    borderRadius: '8px'\r\n  },\r\n  songTitle: {\r\n    color: '#fff',\r\n    margin: '0 0 5px 0'\r\n  },\r\n  songArtist: {\r\n    color: 'rgba(255,255,255,0.7)',\r\n    margin: 0,\r\n    fontSize: '14px'\r\n  },\r\n  playButton: {\r\n    padding: '8px 20px',\r\n    backgroundColor: '#8e44ad',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '20px',\r\n    cursor: 'pointer'\r\n  }\r\n};\r\n\r\nexport default Recommendations;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMc,mBAAmB,GAAG;IAC1BC,KAAK,EAAE,CACL;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,mBAAmB;MAAEC,MAAM,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAO,CAAC,EACxE;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE,mBAAmB;MAAEC,QAAQ,EAAE;IAAO,CAAC,CACzE;IACDC,GAAG,EAAE,CACH;MAAEJ,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,kBAAkB;MAAEC,MAAM,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAO,CAAC,EACvE;MAAEH,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE,aAAa;MAAEC,QAAQ,EAAE;IAAO,CAAC;IAEnE;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd,MAAMsB,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;IACjE,IAAIJ,QAAQ,EAAE;MACZZ,cAAc,CAACY,QAAQ,CAAC;MACxB;MACAK,UAAU,CAAC,MAAM;QACff,kBAAkB,CAACG,mBAAmB,CAACO,QAAQ,CAACM,IAAI,CAAC,IAAI,EAAE,CAAC;QAC5Dd,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLN,QAAQ,CAAC,cAAc,CAAC;IAC1B;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA,CAACF,MAAM;IAACe,KAAK,EAAC,sBAAsB;IAAAW,QAAA,GACjCpB,WAAW,iBACVJ,OAAA;MAAKyB,KAAK,EAAEC,WAAW,CAACC,UAAW;MAAAH,QAAA,eACjCxB,OAAA;QAAKyB,KAAK,EAAE;UACVG,eAAe,EAAExB,WAAW,CAACyB,KAAK;UAClCC,OAAO,EAAE,WAAW;UACpBC,YAAY,EAAE,MAAM;UACpBC,OAAO,EAAE,aAAa;UACtBC,UAAU,EAAE;QACd,CAAE;QAAAT,QAAA,gBACAxB,OAAA;UAAMyB,KAAK,EAAE;YAAES,QAAQ,EAAE,MAAM;YAAEC,WAAW,EAAE;UAAO,CAAE;UAAAX,QAAA,EACpDpB,WAAW,CAACgC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACPxC,OAAA;UAAMyB,KAAK,EAAE;YAAEI,KAAK,EAAE,MAAM;YAAEY,UAAU,EAAE;UAAM,CAAE;UAAAjB,QAAA,EAC/CpB,WAAW,CAACmB;QAAI;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEAhC,SAAS,gBACRR,OAAA;MAAKyB,KAAK,EAAEC,WAAW,CAACgB,OAAQ;MAAAlB,QAAA,gBAC9BxB,OAAA;QAAKyB,KAAK,EAAEC,WAAW,CAACiB;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCxC,OAAA;QAAAwB,QAAA,EAAG;MAAgC;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,gBAENxC,OAAA;MAAKyB,KAAK,EAAEC,WAAW,CAACpB,eAAgB;MAAAkB,QAAA,EACrClB,eAAe,CAACsC,GAAG,CAACC,IAAI,iBACvB7C,OAAA;QAAmByB,KAAK,EAAEC,WAAW,CAACoB,QAAS;QAAAtB,QAAA,gBAC7CxB,OAAA;UAAAwB,QAAA,gBACExB,OAAA;YAAIyB,KAAK,EAAEC,WAAW,CAACqB,SAAU;YAAAvB,QAAA,EAAEqB,IAAI,CAAChC;UAAK;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnDxC,OAAA;YAAGyB,KAAK,EAAEC,WAAW,CAACsB,UAAW;YAAAxB,QAAA,EAAEqB,IAAI,CAAC/B;UAAM;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACNxC,OAAA;UAAQyB,KAAK,EAAEC,WAAW,CAACuB,UAAW;UAAAzB,QAAA,EAAC;QAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAL5CK,IAAI,CAACjC,EAAE;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb,CAAC;AAACtC,EAAA,CAzEID,eAAe;EAAA,QACFJ,WAAW;AAAA;AAAAqD,EAAA,GADxBjD,eAAe;AA2ErB,MAAMyB,WAAW,GAAG;EAClBC,UAAU,EAAE;IACVwB,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE;EAChB,CAAC;EACDV,OAAO,EAAE;IACPS,SAAS,EAAE,QAAQ;IACnBtB,KAAK,EAAE;EACT,CAAC;EACDc,OAAO,EAAE;IACPU,MAAM,EAAE,iCAAiC;IACzCC,SAAS,EAAE,mBAAmB;IAC9BvB,YAAY,EAAE,KAAK;IACnBwB,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,SAAS,EAAE,yBAAyB;IACpCC,MAAM,EAAE;EACV,CAAC;EACDpD,eAAe,EAAE;IACf0B,OAAO,EAAE,MAAM;IACf2B,aAAa,EAAE,QAAQ;IACvBC,GAAG,EAAE;EACP,CAAC;EACDd,QAAQ,EAAE;IACRd,OAAO,EAAE,MAAM;IACf6B,cAAc,EAAE,eAAe;IAC/B5B,UAAU,EAAE,QAAQ;IACpBH,OAAO,EAAE,MAAM;IACfF,eAAe,EAAE,uBAAuB;IACxCG,YAAY,EAAE;EAChB,CAAC;EACDgB,SAAS,EAAE;IACTlB,KAAK,EAAE,MAAM;IACb6B,MAAM,EAAE;EACV,CAAC;EACDV,UAAU,EAAE;IACVnB,KAAK,EAAE,uBAAuB;IAC9B6B,MAAM,EAAE,CAAC;IACTxB,QAAQ,EAAE;EACZ,CAAC;EACDe,UAAU,EAAE;IACVnB,OAAO,EAAE,UAAU;IACnBF,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,OAAO;IACdwB,MAAM,EAAE,MAAM;IACdtB,YAAY,EAAE,MAAM;IACpB+B,MAAM,EAAE;EACV;AACF,CAAC;AAED,eAAe7D,eAAe;AAAC,IAAAiD,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}