{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S P E C T R E\\\\Downloads\\\\moodify\\\\moodify\\\\moodify\\\\src\\\\pages\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport '../styling/Dashboard.css';\n\n// Mock data for development\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MOCK_PLAYLISTS = [{\n  _id: \"p1\",\n  name: \"Chill Vibes\",\n  coverImage: \"https://via.placeholder.com/300\",\n  songs: Array(16).fill(\"\")\n}, {\n  _id: \"p2\",\n  name: \"Workout Mix\",\n  coverImage: \"https://via.placeholder.com/300\",\n  songs: Array(12).fill(\"\")\n}, {\n  _id: \"p3\",\n  name: \"Focus Study\",\n  coverImage: \"https://via.placeholder.com/300\",\n  songs: Array(20).fill(\"\")\n}, {\n  _id: \"p4\",\n  name: \"Morning Boost\",\n  coverImage: \"https://via.placeholder.com/300\",\n  songs: Array(8).fill(\"\")\n}];\nconst MOCK_SONGS = [{\n  _id: \"s1\",\n  title: \"Happy Day\",\n  artist: \"Joy Band\",\n  coverImage: \"https://via.placeholder.com/300\"\n}, {\n  _id: \"s2\",\n  title: \"Sad Night\",\n  artist: \"Melancholy Group\",\n  coverImage: \"https://via.placeholder.com/300\"\n}, {\n  _id: \"s3\",\n  title: \"Calm Waters\",\n  artist: \"Ocean Sounds\",\n  coverImage: \"https://via.placeholder.com/300\"\n}, {\n  _id: \"s4\",\n  title: \"Energy Boost\",\n  artist: \"Power Pulse\",\n  coverImage: \"https://via.placeholder.com/300\"\n}, {\n  _id: \"s5\",\n  title: \"Dreamy Clouds\",\n  artist: \"Sky High\",\n  coverImage: \"https://via.placeholder.com/300\"\n}, {\n  _id: \"s6\",\n  title: \"Mountain Echo\",\n  artist: \"Nature Vibes\",\n  coverImage: \"https://via.placeholder.com/300\"\n}];\nconst Dashboard = () => {\n  _s();\n  const [popularPlaylists, setPopularPlaylists] = useState([]);\n  const [popularSongs, setPopularSongs] = useState([]);\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Simulate API loading with mock data\n    const loadMockData = () => {\n      setTimeout(() => {\n        setPopularPlaylists(MOCK_PLAYLISTS);\n        setPopularSongs(MOCK_SONGS);\n        setRecentlyPlayed(MOCK_SONGS.slice(0, 3)); // Use first 3 songs as \"recently played\"\n        setLoading(false);\n      }, 1000); // Simulate network delay\n    };\n    loadMockData();\n\n    // Once your backend is ready, you can uncomment and modify this code\n    /*\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Make parallel API calls to fetch different sections of data\r\n        const [playlistsResponse, songsResponse, recentResponse] = await Promise.all([\r\n          fetch('/api/playlists/popular').then(res => res.json()),\r\n          fetch('/api/songs/popular').then(res => res.json()),\r\n          fetch('/api/user/recently-played', {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          }).then(res => res.json())\r\n        ]);\r\n          setPopularPlaylists(playlistsResponse);\r\n        setPopularSongs(songsResponse);\r\n        setRecentlyPlayed(recentResponse);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching dashboard data:', err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n      fetchDashboardData();\r\n    */\n  }, []);\n\n  // Function to handle playing a song\n  const playSong = songId => {\n    console.log(`Playing song with ID: ${songId}`);\n\n    // For demo purposes, update recently played locally\n    const songToPlay = popularSongs.find(song => song._id === songId);\n    if (songToPlay && !recentlyPlayed.some(song => song._id === songId)) {\n      setRecentlyPlayed(prev => [songToPlay, ...prev].slice(0, 10));\n    }\n\n    // Once your backend is ready, you can uncomment this code\n    /*\r\n    try {\r\n      // Make API call to record that user played this song\r\n      fetch('/api/songs/play', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ songId })\r\n      });\r\n    } catch (err) {\r\n      console.error('Error playing song:', err);\r\n    }\r\n    */\n  };\n\n  // Function to handle surprise me button\n  const handleSurpriseMe = () => {\n    // For demo purposes, just play a random song from our mock data\n    const randomIndex = Math.floor(Math.random() * popularSongs.length);\n    const randomSong = popularSongs[randomIndex];\n    playSong(randomSong._id);\n    alert(`Surprise song: ${randomSong.title} by ${randomSong.artist}`);\n\n    // Once your backend is ready, you can uncomment this code\n    /*\r\n    try {\r\n      const response = await fetch('/api/songs/random', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      }).then(res => res.json());\r\n      \r\n      // Play the random song\r\n      const randomSong = response;\r\n      playSong(randomSong._id);\r\n      \r\n      // You might want to show a notification or modal with the surprise song\r\n      alert(`Surprise song: ${randomSong.title} by ${randomSong.artist}`);\r\n    } catch (err) {\r\n      console.error('Error getting random song:', err);\r\n    }\r\n    */\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: \"Loading your music dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Moodify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"surprise-me-btn\",\n          onClick: handleSurpriseMe,\n          children: \"Surprise Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/mood\",\n          className: \"mood-btn\",\n          children: \"Find by Mood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/profile\",\n          className: \"profile-btn\",\n          children: \"My Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recently Played\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-grid\",\n        children: recentlyPlayed.length > 0 ? recentlyPlayed.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"music-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-card-img\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: song.coverImage,\n              alt: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play-btn\",\n              onClick: () => playSong(song._id),\n              children: \"\\u25B6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-card-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: song.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, song._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No recently played songs. Start listening!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Popular Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-grid\",\n        children: popularPlaylists.map(playlist => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"music-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-card-img\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: playlist.coverImage,\n              alt: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/playlist/${playlist._id}`,\n              className: \"view-btn\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-card-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [playlist.songs.length, \" songs\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, playlist._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-grid\",\n        children: popularSongs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"music-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-card-img\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: song.coverImage,\n              alt: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"play-btn\",\n              onClick: () => playSong(song._id),\n              children: \"\\u25B6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-card-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: song.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: song.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, song._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"U5YxkD6gvKPSYdxmPGOaW62yZV4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","MOCK_PLAYLISTS","_id","name","coverImage","songs","Array","fill","MOCK_SONGS","title","artist","Dashboard","_s","popularPlaylists","setPopularPlaylists","popularSongs","setPopularSongs","recentlyPlayed","setRecentlyPlayed","loading","setLoading","loadMockData","setTimeout","slice","playSong","songId","console","log","songToPlay","find","song","some","prev","handleSurpriseMe","randomIndex","Math","floor","random","length","randomSong","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","map","src","alt","playlist","_c","$RefreshReg$"],"sources":["C:/Users/S P E C T R E/Downloads/moodify/moodify/moodify/src/pages/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styling/Dashboard.css';\r\n\r\n\r\n// Mock data for development\r\nconst MOCK_PLAYLISTS = [\r\n  {\r\n    _id: \"p1\",\r\n    name: \"Chill Vibes\",\r\n    coverImage: \"https://via.placeholder.com/300\",\r\n    songs: Array(16).fill(\"\"),\r\n  },\r\n  {\r\n    _id: \"p2\",\r\n    name: \"Workout Mix\",\r\n    coverImage: \"https://via.placeholder.com/300\",\r\n    songs: Array(12).fill(\"\"),\r\n  },\r\n  {\r\n    _id: \"p3\",\r\n    name: \"Focus Study\",\r\n    coverImage: \"https://via.placeholder.com/300\",\r\n    songs: Array(20).fill(\"\"),\r\n  },\r\n  {\r\n    _id: \"p4\",\r\n    name: \"Morning Boost\",\r\n    coverImage: \"https://via.placeholder.com/300\",\r\n    songs: Array(8).fill(\"\"),\r\n  },\r\n];\r\n\r\nconst MOCK_SONGS = [\r\n  {\r\n    _id: \"s1\",\r\n    title: \"Happy Day\",\r\n    artist: \"Joy Band\",\r\n    coverImage: \"https://via.placeholder.com/300\"\r\n  },\r\n  {\r\n    _id: \"s2\",\r\n    title: \"Sad Night\",\r\n    artist: \"Melancholy Group\",\r\n    coverImage: \"https://via.placeholder.com/300\"\r\n  },\r\n  {\r\n    _id: \"s3\",\r\n    title: \"Calm Waters\",\r\n    artist: \"Ocean Sounds\",\r\n    coverImage: \"https://via.placeholder.com/300\"\r\n  },\r\n  {\r\n    _id: \"s4\",\r\n    title: \"Energy Boost\",\r\n    artist: \"Power Pulse\",\r\n    coverImage: \"https://via.placeholder.com/300\"\r\n  },\r\n  {\r\n    _id: \"s5\",\r\n    title: \"Dreamy Clouds\",\r\n    artist: \"Sky High\",\r\n    coverImage: \"https://via.placeholder.com/300\"\r\n  },\r\n  {\r\n    _id: \"s6\",\r\n    title: \"Mountain Echo\",\r\n    artist: \"Nature Vibes\",\r\n    coverImage: \"https://via.placeholder.com/300\"\r\n  },\r\n];\r\n\r\nconst Dashboard = () => {\r\n  const [popularPlaylists, setPopularPlaylists] = useState([]);\r\n  const [popularSongs, setPopularSongs] = useState([]);\r\n  const [recentlyPlayed, setRecentlyPlayed] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Simulate API loading with mock data\r\n    const loadMockData = () => {\r\n      setTimeout(() => {\r\n        setPopularPlaylists(MOCK_PLAYLISTS);\r\n        setPopularSongs(MOCK_SONGS);\r\n        setRecentlyPlayed(MOCK_SONGS.slice(0, 3)); // Use first 3 songs as \"recently played\"\r\n        setLoading(false);\r\n      }, 1000); // Simulate network delay\r\n    };\r\n    \r\n    loadMockData();\r\n    \r\n    // Once your backend is ready, you can uncomment and modify this code\r\n    /*\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Make parallel API calls to fetch different sections of data\r\n        const [playlistsResponse, songsResponse, recentResponse] = await Promise.all([\r\n          fetch('/api/playlists/popular').then(res => res.json()),\r\n          fetch('/api/songs/popular').then(res => res.json()),\r\n          fetch('/api/user/recently-played', {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          }).then(res => res.json())\r\n        ]);\r\n\r\n        setPopularPlaylists(playlistsResponse);\r\n        setPopularSongs(songsResponse);\r\n        setRecentlyPlayed(recentResponse);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching dashboard data:', err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n    */\r\n  }, []);\r\n\r\n  // Function to handle playing a song\r\n  const playSong = (songId) => {\r\n    console.log(`Playing song with ID: ${songId}`);\r\n    \r\n    // For demo purposes, update recently played locally\r\n    const songToPlay = popularSongs.find(song => song._id === songId);\r\n    \r\n    if (songToPlay && !recentlyPlayed.some(song => song._id === songId)) {\r\n      setRecentlyPlayed(prev => [songToPlay, ...prev].slice(0, 10));\r\n    }\r\n    \r\n    // Once your backend is ready, you can uncomment this code\r\n    /*\r\n    try {\r\n      // Make API call to record that user played this song\r\n      fetch('/api/songs/play', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({ songId })\r\n      });\r\n    } catch (err) {\r\n      console.error('Error playing song:', err);\r\n    }\r\n    */\r\n  };\r\n\r\n  // Function to handle surprise me button\r\n  const handleSurpriseMe = () => {\r\n    // For demo purposes, just play a random song from our mock data\r\n    const randomIndex = Math.floor(Math.random() * popularSongs.length);\r\n    const randomSong = popularSongs[randomIndex];\r\n    \r\n    playSong(randomSong._id);\r\n    alert(`Surprise song: ${randomSong.title} by ${randomSong.artist}`);\r\n    \r\n    // Once your backend is ready, you can uncomment this code\r\n    /*\r\n    try {\r\n      const response = await fetch('/api/songs/random', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      }).then(res => res.json());\r\n      \r\n      // Play the random song\r\n      const randomSong = response;\r\n      playSong(randomSong._id);\r\n      \r\n      // You might want to show a notification or modal with the surprise song\r\n      alert(`Surprise song: ${randomSong.title} by ${randomSong.artist}`);\r\n    } catch (err) {\r\n      console.error('Error getting random song:', err);\r\n    }\r\n    */\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"dashboard-loading\">Loading your music dashboard...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <header className=\"dashboard-header\">\r\n        <h1>Welcome to Moodify</h1>\r\n        <div className=\"dashboard-actions\">\r\n          <button \r\n            className=\"surprise-me-btn\"\r\n            onClick={handleSurpriseMe}\r\n          >\r\n            Surprise Me\r\n          </button>\r\n          <Link to=\"/mood\" className=\"mood-btn\">Find by Mood</Link>\r\n          <Link to=\"/profile\" className=\"profile-btn\">My Profile</Link>\r\n        </div>\r\n      </header>\r\n\r\n      <section className=\"dashboard-section\">\r\n        <h2>Recently Played</h2>\r\n        <div className=\"music-grid\">\r\n          {recentlyPlayed.length > 0 ? (\r\n            recentlyPlayed.map(song => (\r\n              <div key={song._id} className=\"music-card\">\r\n                <div className=\"music-card-img\">\r\n                  <img src={song.coverImage} alt={song.title} />\r\n                  <button \r\n                    className=\"play-btn\"\r\n                    onClick={() => playSong(song._id)}\r\n                  >\r\n                    ▶\r\n                  </button>\r\n                </div>\r\n                <div className=\"music-card-info\">\r\n                  <h3>{song.title}</h3>\r\n                  <p>{song.artist}</p>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No recently played songs. Start listening!</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"dashboard-section\">\r\n        <h2>Popular Playlists</h2>\r\n        <div className=\"music-grid\">\r\n          {popularPlaylists.map(playlist => (\r\n            <div key={playlist._id} className=\"music-card\">\r\n              <div className=\"music-card-img\">\r\n                <img src={playlist.coverImage} alt={playlist.name} />\r\n                <Link to={`/playlist/${playlist._id}`} className=\"view-btn\">\r\n                  View\r\n                </Link>\r\n              </div>\r\n              <div className=\"music-card-info\">\r\n                <h3>{playlist.name}</h3>\r\n                <p>{playlist.songs.length} songs</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"dashboard-section\">\r\n        <h2>Top Songs</h2>\r\n        <div className=\"music-grid\">\r\n          {popularSongs.map(song => (\r\n            <div key={song._id} className=\"music-card\">\r\n              <div className=\"music-card-img\">\r\n                <img src={song.coverImage} alt={song.title} />\r\n                <button \r\n                  className=\"play-btn\"\r\n                  onClick={() => playSong(song._id)}\r\n                >\r\n                  ▶\r\n                </button>\r\n              </div>\r\n              <div className=\"music-card-info\">\r\n                <h3>{song.title}</h3>\r\n                <p>{song.artist}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}