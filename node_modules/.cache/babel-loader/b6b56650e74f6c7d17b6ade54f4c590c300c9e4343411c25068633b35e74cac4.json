{"ast":null,"code":"// Spotify API wrapper\nconst clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\nconst clientSecret = process.env.REACT_APP_SPOTIFY_CLIENT_SECRET;\nlet accessToken = '';\nexport const getAccessToken = async () => {\n  if (accessToken) return accessToken;\n\n  // Client Credentials Flow (no user auth needed for public data)\n  const response = await fetch('https://accounts.spotify.com/api/token', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + btoa(`${clientId}:${clientSecret}`)\n    },\n    body: 'grant_type=client_credentials'\n  });\n  const data = await response.json();\n  accessToken = data.access_token;\n  return accessToken;\n};\nexport const getTopSongs = async () => {\n  const token = await getAccessToken();\n\n  // Fetch Spotify's \"Top 50 Global\" playlist\n  const response = await fetch('https://api.spotify.com/v1/playlists/37i9dQZEVXbMDoHDwVN2tF', {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const data = await response.json();\n  return data.tracks.items.map(item => {\n    var _item$track$album$ima;\n    return {\n      id: item.track.id,\n      title: item.track.name,\n      artist: item.track.artists.map(a => a.name).join(', '),\n      duration: Math.floor(item.track.duration_ms / 1000),\n      // in seconds\n      cover: (_item$track$album$ima = item.track.album.images[0]) === null || _item$track$album$ima === void 0 ? void 0 : _item$track$album$ima.url,\n      preview: item.track.preview_url\n    };\n  });\n};","map":{"version":3,"names":["clientId","process","env","REACT_APP_SPOTIFY_CLIENT_ID","clientSecret","REACT_APP_SPOTIFY_CLIENT_SECRET","accessToken","getAccessToken","response","fetch","method","headers","btoa","body","data","json","access_token","getTopSongs","token","tracks","items","map","item","_item$track$album$ima","id","track","title","name","artist","artists","a","join","duration","Math","floor","duration_ms","cover","album","images","url","preview","preview_url"],"sources":["C:/Users/nabai/Desktop/moodify/moodify/src/services/spotifyapi.js"],"sourcesContent":["// Spotify API wrapper\r\nconst clientId = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\r\nconst clientSecret = process.env.REACT_APP_SPOTIFY_CLIENT_SECRET;\r\n\r\nlet accessToken = '';\r\n\r\nexport const getAccessToken = async () => {\r\n  if (accessToken) return accessToken;\r\n\r\n  // Client Credentials Flow (no user auth needed for public data)\r\n  const response = await fetch('https://accounts.spotify.com/api/token', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n      'Authorization': 'Basic ' + btoa(`${clientId}:${clientSecret}`)\r\n    },\r\n    body: 'grant_type=client_credentials'\r\n  });\r\n\r\n  const data = await response.json();\r\n  accessToken = data.access_token;\r\n  return accessToken;\r\n};\r\n\r\nexport const getTopSongs = async () => {\r\n  const token = await getAccessToken();\r\n  \r\n  // Fetch Spotify's \"Top 50 Global\" playlist\r\n  const response = await fetch('https://api.spotify.com/v1/playlists/37i9dQZEVXbMDoHDwVN2tF', {\r\n    headers: { 'Authorization': `Bearer ${token}` }\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data.tracks.items.map(item => ({\r\n    id: item.track.id,\r\n    title: item.track.name,\r\n    artist: item.track.artists.map(a => a.name).join(', '),\r\n    duration: Math.floor(item.track.duration_ms / 1000), // in seconds\r\n    cover: item.track.album.images[0]?.url,\r\n    preview: item.track.preview_url\r\n  }));\r\n};"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAA2B;AACxD,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACG,+BAA+B;AAEhE,IAAIC,WAAW,GAAG,EAAE;AAEpB,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAID,WAAW,EAAE,OAAOA,WAAW;;EAEnC;EACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;IACrEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,mCAAmC;MACnD,eAAe,EAAE,QAAQ,GAAGC,IAAI,CAAC,GAAGZ,QAAQ,IAAII,YAAY,EAAE;IAChE,CAAC;IACDS,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAClCT,WAAW,GAAGQ,IAAI,CAACE,YAAY;EAC/B,OAAOV,WAAW;AACpB,CAAC;AAED,OAAO,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,KAAK,GAAG,MAAMX,cAAc,CAAC,CAAC;;EAEpC;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6DAA6D,EAAE;IAC1FE,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUO,KAAK;IAAG;EAChD,CAAC,CAAC;EAEF,MAAMJ,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACK,MAAM,CAACC,KAAK,CAACC,GAAG,CAACC,IAAI;IAAA,IAAAC,qBAAA;IAAA,OAAK;MACpCC,EAAE,EAAEF,IAAI,CAACG,KAAK,CAACD,EAAE;MACjBE,KAAK,EAAEJ,IAAI,CAACG,KAAK,CAACE,IAAI;MACtBC,MAAM,EAAEN,IAAI,CAACG,KAAK,CAACI,OAAO,CAACR,GAAG,CAACS,CAAC,IAAIA,CAAC,CAACH,IAAI,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC;MACtDC,QAAQ,EAAEC,IAAI,CAACC,KAAK,CAACZ,IAAI,CAACG,KAAK,CAACU,WAAW,GAAG,IAAI,CAAC;MAAE;MACrDC,KAAK,GAAAb,qBAAA,GAAED,IAAI,CAACG,KAAK,CAACY,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,cAAAf,qBAAA,uBAA1BA,qBAAA,CAA4BgB,GAAG;MACtCC,OAAO,EAAElB,IAAI,CAACG,KAAK,CAACgB;IACtB,CAAC;EAAA,CAAC,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}