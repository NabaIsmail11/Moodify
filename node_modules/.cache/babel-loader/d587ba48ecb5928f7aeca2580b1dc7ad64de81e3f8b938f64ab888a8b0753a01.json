{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nabai\\\\Desktop\\\\moodify\\\\moodify\\\\src\\\\pages\\\\selectmood.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Layout from '../components/layout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectMood = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedMood, setSelectedMood] = useState(null);\n  const moods = [{\n    id: 1,\n    emoji: 'ðŸ˜Š',\n    name: 'Happy',\n    color: '#F9D71C'\n  }, {\n    id: 2,\n    emoji: 'ðŸ˜¢',\n    name: 'Sad',\n    color: '#5D8BF4'\n  }, {\n    id: 3,\n    emoji: 'ðŸ˜¡',\n    name: 'Angry',\n    color: '#FF6B6B'\n  }, {\n    id: 4,\n    emoji: 'ðŸ˜Œ',\n    name: 'Calm',\n    color: '#6BCB77'\n  }, {\n    id: 5,\n    emoji: 'ðŸ˜´',\n    name: 'Tired',\n    color: '#A685E2'\n  }, {\n    id: 6,\n    emoji: 'ðŸ¤ª',\n    name: 'Energetic',\n    color: '#FF9F45'\n  }];\n  const handleMoodSelect = mood => {\n    setSelectedMood(mood);\n    localStorage.setItem('selectedMood', JSON.stringify(mood));\n    setTimeout(() => navigate('/recommendations'), 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"How are you feeling today?\",\n    subtitle: \"Select your current mood\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: localStyles.moodsContainer,\n      children: moods.map(mood => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...localStyles.moodButton,\n          backgroundColor: (selectedMood === null || selectedMood === void 0 ? void 0 : selectedMood.id) === mood.id ? mood.color : 'rgba(255, 255, 255, 0.1)',\n          transform: (selectedMood === null || selectedMood === void 0 ? void 0 : selectedMood.id) === mood.id ? 'scale(1.1)' : 'scale(1)',\n          boxShadow: (selectedMood === null || selectedMood === void 0 ? void 0 : selectedMood.id) === mood.id ? `0 0 20px ${mood.color}40` : 'none'\n        },\n        onClick: () => handleMoodSelect(mood),\n        disabled: selectedMood !== null,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: localStyles.moodEmoji,\n          children: mood.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: localStyles.moodName,\n          children: mood.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, mood.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), selectedMood && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: localStyles.selectedFeedback,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: localStyles.selectedText,\n        children: [\"Selected: \", selectedMood.emoji, \" \", selectedMood.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: localStyles.redirectText,\n        children: \"Loading recommendations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectMood, \"tPG+0TWOXo77YQUiwJlt2sAEJK8=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectMood;\nconst localStyles = {\n  moodsContainer: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 1fr)',\n    gap: '15px',\n    marginBottom: '30px'\n  },\n  moodButton: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '25px 10px',\n    borderRadius: '10px',\n    border: 'none',\n    cursor: 'pointer',\n    transition: 'all 0.3s ease',\n    ':hover': {\n      transform: 'scale(1.05)',\n      boxShadow: '0 5px 15px rgba(0, 0, 0, 0.2)'\n    }\n  },\n  moodEmoji: {\n    fontSize: '36px',\n    marginBottom: '8px'\n  },\n  moodName: {\n    color: '#fff',\n    fontSize: '14px',\n    fontWeight: '500'\n  },\n  selectedFeedback: {\n    marginTop: '20px',\n    padding: '15px',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    borderRadius: '8px',\n    textAlign: 'center'\n  },\n  selectedText: {\n    color: '#fff',\n    fontSize: '18px',\n    margin: '0 0 5px 0'\n  },\n  redirectText: {\n    color: 'rgba(255, 255, 255, 0.7)',\n    fontSize: '14px',\n    margin: 0\n  }\n};\nexport default SelectMood;\nvar _c;\n$RefreshReg$(_c, \"SelectMood\");","map":{"version":3,"names":["React","useState","useNavigate","Layout","jsxDEV","_jsxDEV","SelectMood","_s","navigate","selectedMood","setSelectedMood","moods","id","emoji","name","color","handleMoodSelect","mood","localStorage","setItem","JSON","stringify","setTimeout","title","subtitle","children","style","localStyles","moodsContainer","map","moodButton","backgroundColor","transform","boxShadow","onClick","disabled","moodEmoji","fileName","_jsxFileName","lineNumber","columnNumber","moodName","selectedFeedback","selectedText","redirectText","_c","display","gridTemplateColumns","gap","marginBottom","flexDirection","alignItems","justifyContent","padding","borderRadius","border","cursor","transition","fontSize","fontWeight","marginTop","textAlign","margin","$RefreshReg$"],"sources":["C:/Users/nabai/Desktop/moodify/moodify/src/pages/selectmood.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Layout from '../components/layout';\r\n\r\nconst SelectMood = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedMood, setSelectedMood] = useState(null);\r\n\r\n  const moods = [\r\n    { id: 1, emoji: 'ðŸ˜Š', name: 'Happy', color: '#F9D71C' },\r\n    { id: 2, emoji: 'ðŸ˜¢', name: 'Sad', color: '#5D8BF4' },\r\n    { id: 3, emoji: 'ðŸ˜¡', name: 'Angry', color: '#FF6B6B' },\r\n    { id: 4, emoji: 'ðŸ˜Œ', name: 'Calm', color: '#6BCB77' },\r\n    { id: 5, emoji: 'ðŸ˜´', name: 'Tired', color: '#A685E2' },\r\n    { id: 6, emoji: 'ðŸ¤ª', name: 'Energetic', color: '#FF9F45' }\r\n  ];\r\n\r\n  const handleMoodSelect = (mood) => {\r\n    setSelectedMood(mood);\r\n    localStorage.setItem('selectedMood', JSON.stringify(mood));\r\n    setTimeout(() => navigate('/recommendations'), 1000);\r\n  };\r\n\r\n  return (\r\n    <Layout \r\n      title=\"How are you feeling today?\"\r\n      subtitle=\"Select your current mood\"\r\n    >\r\n      <div style={localStyles.moodsContainer}>\r\n        {moods.map(mood => (\r\n          <button\r\n            key={mood.id}\r\n            style={{\r\n              ...localStyles.moodButton,\r\n              backgroundColor: selectedMood?.id === mood.id ? mood.color : 'rgba(255, 255, 255, 0.1)',\r\n              transform: selectedMood?.id === mood.id ? 'scale(1.1)' : 'scale(1)',\r\n              boxShadow: selectedMood?.id === mood.id ? `0 0 20px ${mood.color}40` : 'none'\r\n            }}\r\n            onClick={() => handleMoodSelect(mood)}\r\n            disabled={selectedMood !== null}\r\n          >\r\n            <span style={localStyles.moodEmoji}>{mood.emoji}</span>\r\n            <span style={localStyles.moodName}>{mood.name}</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n      \r\n      {selectedMood && (\r\n        <div style={localStyles.selectedFeedback}>\r\n          <p style={localStyles.selectedText}>Selected: {selectedMood.emoji} {selectedMood.name}</p>\r\n          <p style={localStyles.redirectText}>Loading recommendations...</p>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst localStyles = {\r\n  moodsContainer: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3, 1fr)',\r\n    gap: '15px',\r\n    marginBottom: '30px',\r\n  },\r\n  moodButton: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '25px 10px',\r\n    borderRadius: '10px',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.3s ease',\r\n    ':hover': {\r\n      transform: 'scale(1.05)',\r\n      boxShadow: '0 5px 15px rgba(0, 0, 0, 0.2)',\r\n    }\r\n  },\r\n  moodEmoji: {\r\n    fontSize: '36px',\r\n    marginBottom: '8px',\r\n  },\r\n  moodName: {\r\n    color: '#fff',\r\n    fontSize: '14px',\r\n    fontWeight: '500',\r\n  },\r\n  selectedFeedback: {\r\n    marginTop: '20px',\r\n    padding: '15px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n    borderRadius: '8px',\r\n    textAlign: 'center',\r\n  },\r\n  selectedText: {\r\n    color: '#fff',\r\n    fontSize: '18px',\r\n    margin: '0 0 5px 0',\r\n  },\r\n  redirectText: {\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    fontSize: '14px',\r\n    margin: 0,\r\n  }\r\n};\r\n\r\nexport default SelectMood;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}